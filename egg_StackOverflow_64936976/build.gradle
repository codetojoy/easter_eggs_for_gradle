
def getFileList() {
    def list = []
    list << "./data/abc/abc1.txt"
    list << "./data/abc/abc2.txt"
    list << "./data/def/def1.txt"
    list << "./data/def/def2.txt"
    list << "./data/ijk/ijk1.txt"
    list << "./data/ijk/ijk2.txt"
    return list
}

// input: "./data/abc/abc1.txt"
// returns: object such that:
//      obj.relativeDir = "./data/abc"
//      obj.filename = "abc1.txt"
def getFileInfo(path) {
    def file = new File(path)
    assert file.exists()
    def info = new Expando()
    info.relativeDir = file.parentFile.path
    info.filename = file.name
    return info
}

task sourceDrop(type: Zip) {
    def filelist = getFileList() 
 
    baseName = "sourceDrop"
    version = "1.0"
    
    fileList.each { file ->
        def info = getFileInfo(file)
        from (info.relativeDir) {
            include info.filename into info.relativeDir
        }
    }

    destinationDir = new File(rootProject.projectDir, "")
}
